#!/usr/bin/env bash
# shellcheck shell=bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202308292357-git
# @@Author           :  Jason Hempstead
# @@Contact          :  jason@casjaysdev.pro
# @@License          :  LICENSE.md
# @@ReadME           :  node-server --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Tuesday, Aug 29, 2023 23:57 EDT
# @@File             :  node-server
# @@Description      :
# @@Changelog        :  New script
# @@TODO             :  Better documentation
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  shell/bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# shellcheck disable=SC2016
# shellcheck disable=SC2031
# shellcheck disable=SC2120
# shellcheck disable=SC2155
# shellcheck disable=SC2199
# shellcheck disable=SC2317
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# script variables
APPNAME="$(basename "$0" 2>/dev/null)"
VERSION="202308292357-git"
RUN_USER="$USER"
SET_UID="$(id -u)"
SCRIPT_SRC_DIR="${BASH_SOURCE%/*}"
NODE_SERVER_CWD="$(realpath "$PWD")"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# check for command
__cmd_exists() { which $1 >/dev/null 2>&1 || return 1; }
__function_exists() { builtin type $1 >/dev/null 2>&1 || return 1; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# custom functions

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Define Variables
NODE_SERVER_EXIT_STATUS=0
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -f "/etc/node/.env" ] && . "/etc/node/.env"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Main application
if [ "$NODE_MANAGER" = "fnm" ] && [ -n "$(command -v fnm 2>/dev/null)" ]; then
  eval "$(fnm env)" && eval "$(fnm env --use-on-cd)"
  fnm use --install-if-missing $NODE_VERSION && fnm default $NODE_VERSION
  [ -n "$(command -v node 2>/dev/null)" ] && true
else
  export NODE_MANAGER="system"
  pkmgr update && pkmgr install nodejs npm
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -n "$(command -v npm 2>/dev/null)" ] && true || { echo "Can not find npm" && exit 5; }
[ -n "$(command -v node 2>/dev/null)" ] && true || { echo "Can not find node" && exit 6; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Figure out directory
[ -n "$SCRIPT" ] && [ -f "$SCRIPT" ] && SCRIPT="$(realpath "$SCRIPT")" && cd "$(dirname "$SCRIPT")" ||
  { [ -d "/app" ] && cd /app; } || { [ -d "/data/htdocs" ] && cd /data/htdocs || false; } ||
  { cd "/usr/share/webapps/expressjs" || false; } || exit 1
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Load dotenv file
[ -f "$PWD/.env" ] && . "$PWD/.env" ||
  { [ -f "$PWD/.env.dev" ] && . "$PWD/.env.dev"; } ||
  { [ -f "$PWD/.env.prod" ] && . "$PWD/.env.prod"; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Find script
{ [ -f "./app.js" ] && SCRIPT="./app.js"; } ||
  { [ -f "./src/app.js" ] && SCRIPT="./src/app.js"; } ||
  { [ -f "./src/server.js" ] && SCRIPT="./src/server.js"; } ||
  { [ -f "./src/index.js" ] && SCRIPT="./src/index.js"; } ||
  [ -f "./package.json" ] || { echo "Can not find a package.json in $PWD" && exit 1; }
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
echo "Node version is $(node -v | sed 's|^v||g')"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
[ -f "./package.json" ] && npm i -D >/dev/null && npm i -g nodemon >/dev/null
[ -n "$(command -v nodemon 2>/dev/null)" ] && nodemon "$SCRIPT" || node "$SCRIPT" || NODE_SERVER_EXIT_STATUS=10
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# End application
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# lets exit with code
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
exit $NODE_SERVER_EXIT_STATUS
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# ex: ts=2 sw=2 et filetype=sh
